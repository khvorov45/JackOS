/** Provides basic mathematical functions */

class Math {

    static Array twoToThe;
    static int qty;

    function void init() {

        let twoToThe = Array.new(16);

        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
        let twoToThe[15] = ~32767;

        return;
    }

    /** Returns true if the j-th bith of integer i is 1 and false otherwise */
    function boolean bit(int i, int j) {
        if ((i & twoToThe[j]) = 0) {
            return false;
        }
        return true;
    }

    /** Returns the absolute value of x */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y */
    function int multiply(int x, int y) {

        var int sum, shiftedX, nbit;

        let nbit = 0;
        let sum = 0;
        let shiftedX = x;

        while (nbit < 16) {
            if (Math.bit(y, nbit)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let nbit = nbit + 1;
        }

        return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {

        var int result;
        var boolean negate_result, posY, posX;

        let posY = true;
        let posX = true;

        if (y < 0) {
            let posY = false;
            let y = -y;
        }

        if (x < 0) {
            let posX = false;
            let x = -x;
        }

        let result = Math.divideAbs(x, y);

        if (posX & posY) {
            return result;
        }

        if ((~posX) & (~posY)) {
            return result;
        }

        return -result;
    }

    /** Returns the integer part of x/y when both are positive */
    function int divideAbs(int x, int y) {

        var int q;

        if ((y > x) | (y < 0)) { // y < 0 detects overflow
            let qty = 0;
            return 0;
        }

        let q = Math.divideAbs(x, y + y);

        if ((x - qty) < y) {
            return q + q;
        }
        else {
            let qty = qty + y;
            return q + q + 1;
        }
    }

    /** Returns the minimum of x and y */
    function int min(int x, int y) {
        if (x < y) {
            return x;
        }
        return y;
    }

    /** Returns the maximum of x and y */
    function int max(int x, int y) {
        if (x > y) {
            return x;
        }
        return y;
    }

    /** Returns the integer part of the square root of x */
    function int sqrt(int x) {

        var int y, nbit, curGuess, curGuess2;

        let y = 0;
        let nbit = 7;

        while (nbit > -1) {

            let curGuess = y + twoToThe[nbit];
            let curGuess2 = Math.multiply(curGuess, curGuess);

            // >0 checks for overflow
            if ((~(curGuess2 > x)) & (curGuess2 > 0)) {
                let y = curGuess;
            }

            let nbit = nbit - 1;
        }
        return y;
    }
}
